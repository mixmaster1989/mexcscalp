require('dotenv').config();
const { MexcSpotClient } = require('./dist/exchange/mexc-spot');

async function checkAllTrades() {
  console.log('üîç –ü–û–õ–ù–´–ô –ê–ù–ê–õ–ò–ó –í–°–ï–• –°–î–ï–õ–û–ö');
  console.log('============================\n');

  try {
    const client = new MexcSpotClient();
    
    // –ü–æ–ª—É—á–∞–µ–º –í–°–ï —Å–¥–µ–ª–∫–∏ ETHUSDC
    const trades = await client.getMyTrades('ETHUSDC', { limit: 200 });
    
    console.log(`üìä –í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫: ${trades.length}`);
    
    // –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –ø–æ–∫—É–ø–∫–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏
    const buyTrades = trades.filter(t => !t.isBuyerMaker);
    const sellTrades = trades.filter(t => t.isBuyerMaker);
    
    console.log(`üü¢ –ü–æ–∫—É–ø–∫–∏ (BUY): ${buyTrades.length}`);
    console.log(`üî¥ –ü—Ä–æ–¥–∞–∂–∏ (SELL): ${sellTrades.length}`);
    
    if (sellTrades.length > 0) {
      console.log('\nüî¥ –ü–û–°–õ–ï–î–ù–ò–ï –ü–†–û–î–ê–ñ–ò:');
      console.log('====================');
      sellTrades.slice(0, 10).forEach((trade, index) => {
        const time = new Date(trade.time).toLocaleString();
        console.log(`${index + 1}. –ü—Ä–æ–¥–∞–Ω–æ: ${trade.qty} ETH @ ${trade.price} USDC`);
        console.log(`   –ü–æ–ª—É—á–µ–Ω–æ: ${trade.quoteQty} USDC`);
        console.log(`   –í—Ä–µ–º—è: ${time}`);
        console.log('');
      });
    }
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    let totalETHBought = 0;
    let totalUSDCSpent = 0;
    let totalETHSold = 0;
    let totalUSDCReceived = 0;
    
    buyTrades.forEach(trade => {
      totalETHBought += parseFloat(trade.qty);
      totalUSDCSpent += parseFloat(trade.quoteQty);
    });
    
    sellTrades.forEach(trade => {
      totalETHSold += parseFloat(trade.qty);
      totalUSDCReceived += parseFloat(trade.quoteQty);
    });
    
    console.log('\nüìà –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
    console.log('====================');
    console.log(`ETH –∫—É–ø–ª–µ–Ω–æ: ${totalETHBought.toFixed(8)}`);
    console.log(`USDC –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: ${totalUSDCSpent.toFixed(2)}`);
    console.log(`ETH –ø—Ä–æ–¥–∞–Ω–æ: ${totalETHSold.toFixed(8)}`);
    console.log(`USDC –ø–æ–ª—É—á–µ–Ω–æ: ${totalUSDCReceived.toFixed(2)}`);
    
    const netETH = totalETHBought - totalETHSold;
    const netUSDC = totalUSDCReceived - totalUSDCSpent;
    
    console.log('\nüí∞ –ß–ò–°–¢–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:');
    console.log('====================');
    console.log(`–ß–∏—Å—Ç—ã–π ETH: ${netETH.toFixed(8)}`);
    console.log(`–ß–∏—Å—Ç—ã–π USDC: ${netUSDC.toFixed(2)}`);
    
    if (netUSDC > 0) {
      console.log(`‚úÖ –ü–†–ò–ë–´–õ–¨: +${netUSDC.toFixed(2)} USDC`);
    } else {
      console.log(`‚ùå –£–ë–´–¢–û–ö: ${netUSDC.toFixed(2)} USDC`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

checkAllTrades();
