"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScalperEnhancer = void 0;
exports.createDefaultConfig = createDefaultConfig;
const orderManager_1 = require("./orderManager");
const marketData_1 = require("./marketData");
/**
 * –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫–∞–ª—å–ø–µ—Ä —Å —Å–µ—Ä–≤–∏—Å–Ω–æ–π –ª–æ–≥–∏–∫–æ–π
 */
class ScalperEnhancer {
    orderManager;
    marketDataManager;
    restClient;
    instrument;
    config;
    isActive = false;
    lastFillTime = Date.now();
    lastStatusUpdate = 0;
    constructor(config, restClient, instrument) {
        this.config = config;
        this.restClient = restClient;
        this.instrument = instrument;
        // –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä—ã
        this.orderManager = new orderManager_1.OrderManager(config, restClient, instrument);
        this.marketDataManager = new marketData_1.MarketDataManager(restClient, instrument.symbol, instrument.tickSize);
    }
    /**
     * –ó–∞–ø—É—Å—Ç–∏—Ç—å —É–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫–∞–ª—å–ø–µ—Ä
     */
    async start() {
        if (this.isActive)
            return;
        this.isActive = true;
        console.log('üöÄ ScalperEnhancer –∑–∞–ø—É—â–µ–Ω');
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ (–∏–∑ main.ts)
        this.orderManager.setStrategyParams(5.70, 4.275, 4);
    }
    /**
     * –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —É–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫–∞–ª—å–ø–µ—Ä
     */
    async stop() {
        if (!this.isActive)
            return;
        this.isActive = false;
        console.log('üõë ScalperEnhancer –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã (–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ –æ—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥–∏–∫–µ)
     */
    async checkFilters(currentOrders, currentPrice) {
        if (!this.isActive)
            return true;
        try {
            // –ü–æ–ª—É—á–∞–µ–º —Ä—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            const marketData = await this.marketDataManager.getMarketData();
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
            if (!this.passesFilters(marketData)) {
                console.log('‚ö†Ô∏è –§–∏–ª—å—Ç—Ä—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –æ—Ä–¥–µ—Ä–æ–≤');
                return false;
            }
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            await this.updateStatus(currentOrders, marketData);
            return true;
        }
        catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤ checkFilters:', error);
            return true; // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        }
    }
    /**
     * –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ä–¥–µ—Ä–∞–º–∏ (–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
     */
    async manageOrders(currentOrders) {
        if (!this.isActive)
            return;
        try {
            // –ü–æ–ª—É—á–∞–µ–º —Ä—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            const marketData = await this.marketDataManager.getMarketData();
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
            if (!this.passesFilters(marketData)) {
                console.log('‚ö†Ô∏è –§–∏–ª—å—Ç—Ä—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ');
                return;
            }
            // –£–ø—Ä–∞–≤–ª—è–µ–º –æ—Ä–¥–µ—Ä–∞–º–∏ —á–µ—Ä–µ–∑ OrderManager
            await this.orderManager.manageOrders(currentOrders, marketData.midPrice, marketData.bestBid, marketData.bestAsk, marketData.spread);
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            await this.updateStatus(currentOrders, marketData);
        }
        catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤ manageOrders:', error);
        }
    }
    /**
     * –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ä–¥–µ—Ä–∞
     */
    onFill() {
        this.lastFillTime = Date.now();
        this.orderManager.onFill();
    }
    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
     */
    passesFilters(marketData) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–ø—Ä–µ–¥–∞
        if (marketData.spreadTicks < this.config.min_spread_ticks) {
            console.log(`‚ö†Ô∏è –°–ø—Ä–µ–¥ —Å–ª–∏—à–∫–æ–º –º–∞–ª: ${marketData.spreadTicks} < ${this.config.min_spread_ticks}`);
            return false;
        }
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–µ–∂–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
        const dataAge = Date.now() - marketData.timestamp;
        if (dataAge > this.config.staleness_ms) {
            console.log(`‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ —É—Å—Ç–∞—Ä–µ–ª–∏: ${Math.round(dataAge / 1000)}—Å > ${Math.round(this.config.staleness_ms / 1000)}—Å`);
            return false;
        }
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –µ—Å–ª–∏ timestamp —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä—ã–π, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        if (dataAge > 300000) { // 5 –º–∏–Ω—É—Ç
            console.log(`‚ö†Ô∏è Timestamp —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä—ã–π: ${Math.round(dataAge / 1000)}—Å, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
            return false;
        }
        return true;
    }
    /**
     * –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å
     */
    async updateStatus(orders, marketData) {
        const now = Date.now();
        if (now - this.lastStatusUpdate < this.config.refresh_sec * 1000) {
            return;
        }
        const buyOrders = orders.filter((o) => o.side === 'BUY').length;
        const sellOrders = orders.filter((o) => o.side === 'SELL').length;
        console.log(`üìä –°—Ç–∞—Ç—É—Å: ${buyOrders} buy, ${sellOrders} sell | –°–ø—Ä–µ–¥: ${marketData.spreadTicks} —Ç–∏–∫–æ–≤ | –¶–µ–Ω–∞: $${marketData.midPrice.toFixed(2)}`);
        this.lastStatusUpdate = now;
    }
    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
     */
    getStats() {
        const orderStats = this.orderManager.getStats();
        const marketData = this.marketDataManager.getCachedData();
        return {
            ...orderStats,
            marketData,
            isActive: this.isActive,
            timeSinceLastFill: Date.now() - this.lastFillTime
        };
    }
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
     */
    getConfig() {
        return this.config;
    }
}
exports.ScalperEnhancer = ScalperEnhancer;
/**
 * –§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 */
function createDefaultConfig() {
    return {
        ttl_order_sec: 45,
        refresh_sec: 15,
        delta_ticks_for_replace: 3,
        recentering_trigger: 0.5,
        no_fill_watchdog_min: 7,
        min_spread_ticks: 2,
        staleness_ms: 30000, // 5 —Å–µ–∫—É–Ω–¥ –≤–º–µ—Å—Ç–æ 300–º—Å
        cancel_rate_per_min: 30
    };
}
//# sourceMappingURL=scalperEnhancer.js.map