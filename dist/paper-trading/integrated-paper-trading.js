"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntegratedPaperTradingSystem = void 0;
require("dotenv/config");
const market_analyzer_1 = require("../market-analysis/market-analyzer");
const paper_trading_1 = require("./paper-trading");
const result_analyzer_1 = require("./analysis/result-analyzer");
class IntegratedPaperTradingSystem {
    analyzer;
    paperTrading;
    config;
    isRunning = false;
    analysisTimer = null;
    lastAnalysisTime = 0;
    constructor(config) {
        this.config = config;
        // –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Ä—ã–Ω–∫–∞
        const analyzerConfig = {
            symbols: config.symbols,
            intervals: config.intervals,
            updateInterval: config.updateInterval,
            enableWebSocket: config.enableWebSocket,
            enableRest: config.enableRest
        };
        this.analyzer = new market_analyzer_1.MarketAnalyzer(analyzerConfig);
        // –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—É paper trading
        this.paperTrading = new paper_trading_1.PaperTradingSystem();
    }
    /**
     * –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
     */
    async start() {
        console.log('üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã paper trading...');
        try {
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
            this.setupAnalyzerHandlers();
            // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
            await this.analyzer.start();
            // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
            this.startPeriodicAnalysis();
            this.isRunning = true;
            console.log('‚úÖ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞');
            console.log(`üí∞ –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: $${this.paperTrading.getBalance().toFixed(2)}`);
            console.log(`üìä –¢–æ—Ä–≥–æ–≤—ã–µ –ø–∞—Ä—ã: ${this.config.symbols.join(', ')}`);
            console.log(`üéØ –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: ${this.config.positionSize * 100}%`);
            console.log(`üìà –ú–∞–∫—Å–∏–º—É–º –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Å–¥–µ–ª–æ–∫: ${this.config.maxOpenTrades}`);
        }
        catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã:', error);
            throw error;
        }
    }
    /**
     * –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É
     */
    stop() {
        console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...');
        this.isRunning = false;
        if (this.analysisTimer) {
            clearInterval(this.analysisTimer);
            this.analysisTimer = null;
        }
        this.analyzer.stop();
        console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
    }
    /**
     * –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
     */
    setupAnalyzerHandlers() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–Ω–∞–ª–∏–∑–∞ —Ä—ã–Ω–∫–∞
        this.analyzer.setOnAnalysis((analysis) => {
            this.handleMarketAnalysis(analysis);
        });
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        this.analyzer.setOnError((error) => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞:', error);
        });
    }
    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∞–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞
     */
    handleMarketAnalysis(analysis) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ —Å–¥–µ–ª–∫–∏ —Å —Ç–µ–∫—É—â–∏–º–∏ —Ü–µ–Ω–∞–º–∏
        const currentPrices = new Map();
        currentPrices.set(analysis.symbol, analysis.currentPrice);
        this.paperTrading.updateTrades(currentPrices);
    }
    /**
     * –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
     */
    startPeriodicAnalysis() {
        this.analysisTimer = setInterval(async () => {
            await this.performAnalysis();
        }, this.config.analysisInterval * 60 * 1000);
    }
    /**
     * –í—ã–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
     */
    async performAnalysis() {
        if (!this.isRunning)
            return;
        const now = Date.now();
        const timeSinceLastAnalysis = (now - this.lastAnalysisTime) / (1000 * 60);
        if (timeSinceLastAnalysis < this.config.analysisInterval)
            return;
        console.log('\nüìä –í—ã–ø–æ–ª–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...');
        try {
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            const closedTrades = this.paperTrading.getClosedTrades();
            const marketSnapshots = this.paperTrading.getAllMarketSnapshots();
            if (closedTrades.length === 0) {
                console.log('üìù –ù–µ—Ç –∑–∞–∫—Ä—ã—Ç—ã—Ö —Å–¥–µ–ª–æ–∫ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞');
                return;
            }
            // –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
            const analyzer = new result_analyzer_1.ResultAnalyzer(closedTrades, marketSnapshots);
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
            const report = analyzer.generateReport();
            // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            this.displayAnalysisReport(report);
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
            await this.paperTrading.saveData();
            this.lastAnalysisTime = now;
        }
        catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞:', error);
        }
    }
    /**
     * –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –æ—Ç—á–µ—Ç –∞–Ω–∞–ª–∏–∑–∞
     */
    displayAnalysisReport(report) {
        console.log('\n' + '‚ïê'.repeat(60));
        console.log('üìä –û–¢–ß–ï–¢ –ê–ù–ê–õ–ò–ó–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í');
        console.log('‚ïê'.repeat(60));
        // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        console.log(`\nüìà –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:`);
        console.log(`   –í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫: ${report.summary.totalTrades}`);
        console.log(`   –í–∏–Ω—Ä–µ–π—Ç: ${report.summary.winRate.toFixed(1)}%`);
        console.log(`   Profit Factor: ${report.summary.profitFactor.toFixed(2)}`);
        console.log(`   –õ—É—á—à–∏–π –ø–∞—Ç—Ç–µ—Ä–Ω: ${report.summary.bestPattern}`);
        console.log(`   –•—É–¥—à–∏–π –ø–∞—Ç—Ç–µ—Ä–Ω: ${report.summary.worstPattern}`);
        // –¢–æ–ø –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏
        console.log(`\nüîó –¢–û–ü –ö–û–†–†–ï–õ–Ø–¶–ò–ò:`);
        report.correlations.slice(0, 5).forEach((corr, i) => {
            const emoji = Math.abs(corr.correlation) > 0.5 ? 'üî•' : Math.abs(corr.correlation) > 0.3 ? '‚ö°' : 'üìä';
            console.log(`   ${i + 1}. ${emoji} ${corr.factor}: ${corr.correlation.toFixed(3)} (${corr.description})`);
        });
        // –¢–æ–ø –ø–∞—Ç—Ç–µ—Ä–Ω—ã
        console.log(`\nüéØ –¢–û–ü –ü–ê–¢–¢–ï–†–ù–´:`);
        report.patterns.slice(0, 5).forEach((pattern, i) => {
            const emoji = pattern.winRate > 70 ? 'üèÜ' : pattern.winRate > 60 ? 'ü•á' : pattern.winRate > 50 ? 'ü•à' : 'ü•â';
            console.log(`   ${i + 1}. ${emoji} ${pattern.pattern}: ${pattern.winRate.toFixed(1)}% (${pattern.frequency} —Å–ª—É—á–∞–µ–≤)`);
        });
        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if (report.recommendations.length > 0) {
            console.log(`\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:`);
            report.recommendations.slice(0, 5).forEach((rec, i) => {
                console.log(`   ${i + 1}. ${rec}`);
            });
        }
        console.log('\n' + '‚ïê'.repeat(60));
    }
    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
     */
    getCurrentStats() {
        return this.paperTrading.getTradingStats();
    }
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–µ —Å–¥–µ–ª–∫–∏
     */
    getOpenTrades() {
        return this.paperTrading.getOpenTrades();
    }
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å
     */
    getBalance() {
        return this.paperTrading.getBalance();
    }
}
exports.IntegratedPaperTradingSystem = IntegratedPaperTradingSystem;
//# sourceMappingURL=integrated-paper-trading.js.map