const fs = require('fs');

// –ß–∏—Ç–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
let content = fs.readFileSync('src/main.ts', 'utf8');

// –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –≤ –Ω–∞—á–∞–ª–æ
const imports = `import { ScalperEnhancer, createDefaultConfig } from './core/scalperEnhancer';
import { MexcRestClient } from './infra/mexcRest';
import { Instrument } from './core/types';
`;

content = content.replace("import 'dotenv/config';", imports + "import 'dotenv/config';");

// –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –≤ –∫–ª–∞—Å—Å
content = content.replace(
  '  private lastStatusUpdate = 0;',
  `  private lastStatusUpdate = 0;
  
  // –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫–∞–ª—å–ø–µ—Ä
  private enhancedScalper: ScalperEnhancer;
  private mexcRestClient: MexcRestClient;`
);

// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
const constructorInit = `    this.setupTelegramHandlers();
    
    // –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫–∞–ª—å–ø–µ—Ä
    const config = createDefaultConfig();
    this.mexcRestClient = new MexcRestClient(
      process.env.MEXC_API_KEY!,
      process.env.MEXC_SECRET_KEY!
    );
    
    const instrument: Instrument = {
      symbol: 'ETHUSDC',
      baseAsset: 'ETH',
      quoteAsset: 'USDC',
      tickSize: 0.01,
      stepSize: 0.000001,
      minNotional: 1.0,
      maxNotional: 1000000,
      minQty: 0.000001,
      maxQty: 1000
    };
    
    this.enhancedScalper = new ScalperEnhancer(config, this.mexcRestClient, instrument);`;

content = content.replace('    this.setupTelegramHandlers();', constructorInit);

// –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —Å–∫–∞–ª—å–ø–µ—Ä–∞
content = content.replace(
  '      this.logger.info(\'üöÄ –ú—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ MEXC –°–∫–∞–ª—å–ø–µ—Ä\');',
  `      this.logger.info('üöÄ –ú—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ MEXC –°–∫–∞–ª—å–ø–µ—Ä —Å —É–ª—É—á—à–µ–Ω–∏—è–º–∏');
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫–∞–ª—å–ø–µ—Ä
      await this.enhancedScalper.start();`
);

// –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–∑–æ–≤ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —Å–∫–∞–ª—å–ø–µ—Ä–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
content = content.replace(
  '      this.logger.info(`üìä –°—Ç–∞—Ç—É—Å: ${buyOrders} buy, ${sellOrders} sell –æ—Ä–¥–µ—Ä–æ–≤`);',
  `      this.logger.info(\`üìä –°—Ç–∞—Ç—É—Å: \${buyOrders} buy, \${sellOrders} sell –æ—Ä–¥–µ—Ä–æ–≤\`);
      
      // –£–ø—Ä–∞–≤–ª—è–µ–º –æ—Ä–¥–µ—Ä–∞–º–∏ —á–µ—Ä–µ–∑ —É–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫–∞–ª—å–ø–µ—Ä
      await this.enhancedScalper.manageOrders(currentOrders);`
);

// –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∫—É —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —Å–∫–∞–ª—å–ø–µ—Ä–∞
content = content.replace(
  '    this.isRunning = false;',
  `    this.isRunning = false;
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫–∞–ª—å–ø–µ—Ä
    await this.enhancedScalper.stop();`
);

// –ú–µ–Ω—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å 30 –Ω–∞ 15 —Å–µ–∫—É–Ω–¥
content = content.replace(/30000/g, '15000');

// –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
fs.writeFileSync('src/main.ts', content);

console.log('‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
