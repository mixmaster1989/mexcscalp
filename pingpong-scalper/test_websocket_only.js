const { MexcWebSocketClient } = require('./dist/exchanges/mexcWebSocket');

console.log('üéØ –¢–ï–°–¢ –¢–û–õ–¨–ö–û WEBSOCKET –ë–ï–ó REST API');

const ws = new MexcWebSocketClient('ETHUSDT');
let orderBookCount = 0;
let tradeCount = 0;

ws.on('connected', () => {
    console.log('‚úÖ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ MEXC');
});

ws.on('orderbook', (orderbook) => {
    orderBookCount++;
    if (orderBookCount <= 5) { // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 5
        console.log(`üìä OrderBook #${orderBookCount}:`, {
            bid: `${orderbook.bidPrice} (${orderbook.bidQty})`,
            ask: `${orderbook.askPrice} (${orderbook.askQty})`,
            spread: (orderbook.askPrice - orderbook.bidPrice).toFixed(2)
        });
    }
});

ws.on('trade', (trade) => {
    tradeCount++;
    console.log(`üìà Trade #${tradeCount}:`, {
        price: trade.price,
        qty: trade.qty,
        side: trade.side
    });
});

ws.on('error', (error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
});

ws.on('disconnected', () => {
    console.log('üîå WebSocket –æ—Ç–∫–ª—é—á–µ–Ω');
});

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è
console.log('üîÑ –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ WebSocket...');
ws.connect();

// –û—Å—Ç–∞–Ω–æ–≤–∏–º —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
setTimeout(() => {
    console.log('\nüèÅ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ê:');
    console.log(`   OrderBook –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${orderBookCount}`);
    console.log(`   Trade –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${tradeCount}`);
    if (orderBookCount > 0) {
        console.log('‚úÖ WebSocket —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
        console.log('üéâ –ü–∏–Ω–≥-–ø–æ–Ω–≥ —Å–∫–∞–ª—å–ø–µ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
    } else {
        console.log('‚ùå WebSocket –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ');
    }
    ws.disconnect();
    process.exit(0);
}, 15000);
