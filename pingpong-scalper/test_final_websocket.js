const { MexcWebSocketClient } = require('./dist/exchanges/mexcWebSocket');

console.log('üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û WEBSOCKET –ö–õ–ò–ï–ù–¢–ê');

const ws = new MexcWebSocketClient('ETHUSDT');
let orderBookCount = 0;
let tradeCount = 0;

ws.on('connected', () => {
    console.log('‚úÖ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω');
});

ws.on('orderbook', (orderbook) => {
    orderBookCount++;
    console.log(`üìä OrderBook #${orderBookCount}:`, {
        bid: `${orderbook.bidPrice} (${orderbook.bidQty})`,
        ask: `${orderbook.askPrice} (${orderbook.askQty})`,
        spread: (orderbook.askPrice - orderbook.bidPrice).toFixed(2)
    });
});

ws.on('trade', (trade) => {
    tradeCount++;
    console.log(`üìà Trade #${tradeCount}:`, {
        price: trade.price,
        qty: trade.qty,
        side: trade.side
    });
});

ws.on('error', (error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
});

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è
ws.connect();

// –û—Å—Ç–∞–Ω–æ–≤–∏–º —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
setTimeout(() => {
    console.log('\nüèÅ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ê:');
    console.log(`   OrderBook –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${orderBookCount}`);
    console.log(`   Trade –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${tradeCount}`);
    if (orderBookCount > 0 && tradeCount > 0) {
        console.log('‚úÖ WebSocket —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
    } else {
        console.log('‚ùå –ù–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã');
    }
    ws.disconnect();
    process.exit(0);
}, 10000);
