import { EventEmitter } from 'events';
import { MexcWebSocketClient } from '../exchanges/mexcWebSocket';
import { MexcRestClient } from '../exchanges/mexcRest';
import { MicroStatsCalculator } from './alpha';
import { RiskManager } from './risk';
import { Config, MicroStats, SessionStats, Layer } from './types';
export declare class PingPongEngine extends EventEmitter {
    private config;
    private wsClient;
    private restClient;
    private statsCalculator;
    private riskManager;
    private layers;
    private microStats;
    private sessionStats;
    private isRunning;
    private updateInterval;
    private watchdogInterval;
    private lastOrderBookTime;
    private lastTradeTime;
    private priceHistory;
    constructor(config: Config, wsClient: MexcWebSocketClient, restClient: MexcRestClient, statsCalculator: MicroStatsCalculator, riskManager: RiskManager);
    private setupEventHandlers;
    private handleOrderBookTick;
    private handleTradeTick;
    start(): Promise<void>;
    stop(): Promise<void>;
    private updateCycle;
    private updateLayers;
    private updateLayer;
    private updatePendingBuyLayer;
    private updateLongPingLayer;
    private updateCooldownLayer;
    private createNewLayers;
    private canCreateNewLayer;
    private createNewLayer;
    private handleBuyOrderFilled;
    private handleSellOrderFilled;
    private emergencyCloseLayer;
    private cancelLayerOrder;
    private updateSessionStats;
    private watchdog;
    getLayers(): Layer[];
    getMicroStats(): MicroStats | null;
    getSessionStats(): SessionStats;
    isEngineRunning(): boolean;
}
//# sourceMappingURL=engine.d.ts.map